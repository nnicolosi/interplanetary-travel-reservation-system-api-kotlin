# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: set up JDK 1.11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.11
#
#      # Execute compilation
#      - name: Build
#        run: ./gradlew clean build -x test

  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Set up the environment
      - name: set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      # Clean
      - name: Clean
        run: ./gradlew clean

      # Build
      - name: Build
        run: ./gradlew build -x test

      # Test and Generate Reports
      - name: Test
        run: ./gradlew test

      # Execute code quality scan
      - name: Sonar
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args:
            -Dsonar.organization=nnicolosi
            -Dsonar.projectKey=nnicolosi_interplanetary-travel-reservation-system-api-kotlin
            -Dsonar.sources=src/main/
            -Dsonar.tests=src/test/
            -Dsonar.junit.reportsPath=build/test-results/test
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

